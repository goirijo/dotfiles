#!/bin/bash

#Handle multiple casm versions by symlinking to the one you want.
#For this example I've got CASMPREFIX set to CASMcode-dev/builds/target
#and have the environment of my machine set up so that it expects to find
#bin, include and lib content under $HOME/.local
#
#Once casm is built, all files are dumped into $CASMPREFIX
#By invoking `casmlink`, all the needed casm files are soft linked into .local
#and a copy of the current build is made, identified by its version number.
#The version number can be passed to this script to link to an older version
#rather than the latest build.

if [[ $# > 1 ]]; then
    echo "Too many arguments!"
    exit 1
fi

LOCAL=$HOME/.local

if [[ -z "$1" ]]; then
    VERDIR=$CASMDEV/builds/target
else
    VERDIR=$CASMDEV/builds/$1
fi

for f in $VERDIR/bin/*; do
    echo "linking $f..."
    ln -fs $f $LOCAL/bin
done

echo -e

for f in $VERDIR/include/*; do
    echo "linking $f..."
    ln -fs $f $LOCAL/include/
done

echo -e

for f in $(find $VERDIR/lib -maxdepth 1 -type f); do
    echo "linking $f..."
    ln -fs $f $LOCAL/lib
done

echo -e

for f in $(find $VERDIR/lib/python2.7/site-packages -mindepth 1 -maxdepth 1 -type d); do
    echo "linking $f..."
    ln -fs $f $LOCAL/lib/python2.7/site-packages
done

VERSION=$(casm version)
VERSION=${VERSION/#* /}

if [[ ! -e $CASMDEV/builds/$VERSION ]]; then
    cp -r $CASMDEV/builds/target $CASMDEV/builds/$VERSION
    echo "Added $VERSION to builds."
fi
